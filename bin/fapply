#!/usr/bin/env node
var fs = require('fs');
var path = require('path');
var logger = require('loge');
var fapply = require('../');

var optimist = require('optimist')
  .usage([
    'Usage: fapply <filename> [<filename>, ...]',
  ].join('\n'))
  .describe({
    help: 'print this help message',
    verbose: 'print extra output',
    version: 'print version',
  })
  .alias({help: 'h', verbose: 'v'})
  .boolean(['help', 'verbose']);

var argv = optimist.argv;
logger.level = argv.verbose ? 'debug' : 'info';

if (argv.help) {
  optimist.showHelp();
}
else if (argv.version) {
  console.log(require('../package').version);
}
else {
  argv._.forEach(function(filename) {
    logger.debug('fapply(%s)', filename);
    fs.readFile(filename, {encoding: 'utf8'}, function(err, input) {
      if (err) throw new Error('Error reading ' + filename + ': ' + err.stack);
      var options = {
        __dirname: path.dirname(filename)
      };
      fapply(input, options, function(err, output) {
        if (err) throw new Error('Error processing ' + filename + ': ' + err.stack);
        console.log(output);
      });
    });
  });
}
